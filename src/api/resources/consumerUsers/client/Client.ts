/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Flagright from "../../..";
import * as serializers from "../../../../serialization";
import urlJoin from "url-join";
import * as errors from "../../../../errors";

export declare namespace ConsumerUsers {
    interface Options {
        environment?: core.Supplier<environments.FlagrightEnvironment | string>;
        apiKey: core.Supplier<string>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}

export class ConsumerUsers {
    constructor(protected readonly _options: ConsumerUsers.Options) {}

    /**
     * ## POST Consumer User
     *
     * `/consumer/user` endpoint allows you to operate on the [Consumer user entity.](https://docs.flagright.com/docs/flagright-api/0f8fac59d1995-entities-and-relationships#user)
     *
     * In order to pass the payload of a User to Flagright and verify the User, you will need to call this endpoint with the User payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup.
     *
     * ### Payload
     *
     * Each consumer User entity needs three mandatory fields:
     *
     * - `userId` - Unique identifier for the user
     * - `createdTimestamp` - UNIX timestamp in _milliseconds_ for when the User is created in your system
     * @throws {@link Flagright.BadRequestError}
     * @throws {@link Flagright.UnauthorizedError}
     * @throws {@link Flagright.TooManyRequestsError}
     *
     * @example
     *     await flagright.consumerUsers.create({
     *         userDetails: {
     *             name: {
     *                 firstName: "Baran",
     *                 middleName: "Realblood",
     *                 lastName: "Ozkan"
     *             },
     *             dateOfBirth: "1991-01-01",
     *             countryOfResidence: Flagright.CountryCode.Us,
     *             countryOfNationality: Flagright.CountryCode.De,
     *             gender: Flagright.Gender.M
     *         },
     *         userStateDetails: {
     *             state: Flagright.UserState.Unacceptable
     *         },
     *         kycStatusDetails: {
     *             status: Flagright.KycStatus.Successful
     *         },
     *         employmentStatus: Flagright.EmploymentStatus.Unemployed,
     *         legalDocuments: [{
     *                 documentType: "passport",
     *                 documentNumber: "Z9431P",
     *                 documentIssuedDate: 1639939034000,
     *                 documentExpirationDate: 1839939034000,
     *                 documentIssuedCountry: Flagright.CountryCode.De,
     *                 tags: [{
     *                         key: "customerType",
     *                         value: "wallet"
     *                     }],
     *                 nameOnDocument: {
     *                     firstName: "string"
     *                 }
     *             }],
     *         contactDetails: {
     *             emailIds: ["baran@flagright.com"],
     *             contactNumbers: ["+37112345432"],
     *             websites: ["flagright.com"],
     *             addresses: [{
     *                     addressLines: ["Klara-Franke Str 20"],
     *                     postcode: "10557",
     *                     city: "Berlin",
     *                     state: "Berlin",
     *                     country: "Germany",
     *                     tags: [{
     *                             key: "customKey",
     *                             value: "customValue"
     *                         }]
     *                 }]
     *         },
     *         transactionLimits: {
     *             maximumDailyTransactionLimit: {
     *                 amountValue: 1.1,
     *                 amountCurrency: Flagright.CurrencyCode.OneInch
     *             },
     *             maximumWeeklyTransactionLimit: {
     *                 amountValue: 1.1,
     *                 amountCurrency: Flagright.CurrencyCode.OneInch
     *             },
     *             maximumMonthlyTransactionLimit: {
     *                 amountValue: 1.1,
     *                 amountCurrency: Flagright.CurrencyCode.OneInch
     *             },
     *             maximumQuarterlyTransactionLimit: {
     *                 amountValue: 1.1,
     *                 amountCurrency: Flagright.CurrencyCode.OneInch
     *             },
     *             maximumTransactionLimit: {
     *                 amountValue: 1.1,
     *                 amountCurrency: Flagright.CurrencyCode.OneInch
     *             },
     *             maximumYearlyTransactionLimit: {
     *                 amountValue: 1.1,
     *                 amountCurrency: Flagright.CurrencyCode.OneInch
     *             },
     *             paymentMethodLimits: {
     *                 ach: {
     *                     transactionCountLimit: {},
     *                     transactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     },
     *                     averageTransactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     }
     *                 },
     *                 card: {
     *                     transactionCountLimit: {},
     *                     transactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     },
     *                     averageTransactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     }
     *                 },
     *                 iban: {
     *                     transactionCountLimit: {},
     *                     transactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     },
     *                     averageTransactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     }
     *                 },
     *                 upi: {
     *                     transactionCountLimit: {},
     *                     transactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     },
     *                     averageTransactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     }
     *                 },
     *                 genericBankAccount: {
     *                     transactionCountLimit: {},
     *                     transactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     },
     *                     averageTransactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     }
     *                 },
     *                 mpesa: {
     *                     transactionCountLimit: {},
     *                     transactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     },
     *                     averageTransactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     }
     *                 },
     *                 swift: {
     *                     transactionCountLimit: {},
     *                     transactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     },
     *                     averageTransactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     }
     *                 },
     *                 wallet: {
     *                     transactionCountLimit: {},
     *                     transactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     },
     *                     averageTransactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     }
     *                 },
     *                 check: {
     *                     transactionCountLimit: {},
     *                     transactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     },
     *                     averageTransactionAmountLimit: {
     *                         day: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         week: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         month: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         },
     *                         year: {
     *                             amountValue: 1.1,
     *                             amountCurrency: Flagright.CurrencyCode.OneInch
     *                         }
     *                     }
     *                 }
     *             }
     *         },
     *         riskLevel: Flagright.RiskLevel.VeryHigh,
     *         acquisitionChannel: Flagright.AcquisitionChannel.Organic,
     *         sourceOfFunds: [Flagright.SourceOfFunds.Earnings],
     *         userSegment: Flagright.ConsumerUserSegment.Retail,
     *         pepStatus: [{
     *                 isPepHit: true
     *             }],
     *         tags: [{
     *                 key: "customKey",
     *                 value: "customValue"
     *             }],
     *         userId: "96647cfd9e8fe66ee0f3362e011e34e8",
     *         createdTimestamp: 1641654664000
     *     })
     */
    public async create(
        request: Flagright.User,
        requestOptions?: ConsumerUsers.RequestOptions
    ): Promise<Flagright.ConsumerUsersCreateResponse> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FlagrightEnvironment.Default,
                "consumer/users"
            ),
            method: "POST",
            headers: {
                "x-api-key": await core.Supplier.get(this._options.apiKey),
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "flagright",
                "X-Fern-SDK-Version": "1.3.5",
            },
            contentType: "application/json",
            body: await serializers.User.jsonOrThrow(request, { unrecognizedObjectKeys: "strip" }),
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            maxRetries: requestOptions?.maxRetries,
        });
        if (_response.ok) {
            return await serializers.ConsumerUsersCreateResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                breadcrumbsPrefix: ["response"],
            });
        }

        if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
                case 400:
                    throw new Flagright.BadRequestError(_response.error.body);
                case 401:
                    throw new Flagright.UnauthorizedError(_response.error.body);
                case 429:
                    throw new Flagright.TooManyRequestsError(_response.error.body);
                default:
                    throw new errors.FlagrightError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case "non-json":
                throw new errors.FlagrightError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case "timeout":
                throw new errors.FlagrightTimeoutError();
            case "unknown":
                throw new errors.FlagrightError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * ### GET Consumer User
     *
     * `/consumer/user` endpoint allows you to operate on the [Consumer User entity](https://docs.flagright.com/docs/flagright-api/0f8fac59d1995-entities-and-relationships#user).
     *
     * Calling `GET /consumer/user/{userId}` will return the entire user payload and rule execution results for the user with the corresponding `userId`
     * @throws {@link Flagright.UnauthorizedError}
     * @throws {@link Flagright.TooManyRequestsError}
     *
     * @example
     *     await flagright.consumerUsers.get("string")
     */
    public async get(userId: string, requestOptions?: ConsumerUsers.RequestOptions): Promise<Flagright.UserResponse> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FlagrightEnvironment.Default,
                `consumer/users/${userId}`
            ),
            method: "GET",
            headers: {
                "x-api-key": await core.Supplier.get(this._options.apiKey),
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "flagright",
                "X-Fern-SDK-Version": "1.3.5",
            },
            contentType: "application/json",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            maxRetries: requestOptions?.maxRetries,
        });
        if (_response.ok) {
            return await serializers.UserResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                breadcrumbsPrefix: ["response"],
            });
        }

        if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
                case 401:
                    throw new Flagright.UnauthorizedError(_response.error.body);
                case 429:
                    throw new Flagright.TooManyRequestsError(_response.error.body);
                default:
                    throw new errors.FlagrightError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case "non-json":
                throw new errors.FlagrightError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case "timeout":
                throw new errors.FlagrightTimeoutError();
            case "unknown":
                throw new errors.FlagrightError({
                    message: _response.error.errorMessage,
                });
        }
    }
}
