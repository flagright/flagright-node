/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Flagright from "../../api";
import * as core from "../../core";

export const CheckDetails: core.serialization.ObjectSchema<serializers.CheckDetails.Raw, Flagright.CheckDetails> =
    core.serialization.object({
        method: core.serialization.lazy(async () => (await import("..")).CheckPaymentMethod),
        checkNumber: core.serialization.string().optional(),
        checkIdentifier: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        deliveryStatus: core.serialization.lazy(async () => (await import("..")).CheckDetailsDeliveryStatus).optional(),
        etaTimestamp: core.serialization.number().optional(),
        shippingAddress: core.serialization.lazyObject(async () => (await import("..")).Address).optional(),
    });

export declare namespace CheckDetails {
    interface Raw {
        method: serializers.CheckPaymentMethod.Raw;
        checkNumber?: string | null;
        checkIdentifier?: string | null;
        name?: string | null;
        deliveryStatus?: serializers.CheckDetailsDeliveryStatus.Raw | null;
        etaTimestamp?: number | null;
        shippingAddress?: serializers.Address.Raw | null;
    }
}
