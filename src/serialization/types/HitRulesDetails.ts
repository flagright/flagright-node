/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Flagright from "../../api/index";
import * as core from "../../core";
import { RuleAction } from "./RuleAction";
import { RuleHitMeta } from "./RuleHitMeta";
import { RuleLabels } from "./RuleLabels";
import { RuleNature } from "./RuleNature";

export const HitRulesDetails: core.serialization.ObjectSchema<
    serializers.HitRulesDetails.Raw,
    Flagright.HitRulesDetails
> = core.serialization.object({
    ruleId: core.serialization.string().optional(),
    ruleInstanceId: core.serialization.string(),
    ruleName: core.serialization.string(),
    ruleDescription: core.serialization.string(),
    executedAt: core.serialization.number().optional(),
    ruleAction: RuleAction,
    ruleHitMeta: RuleHitMeta.optional(),
    labels: core.serialization.list(RuleLabels).optional(),
    nature: RuleNature.optional(),
    isShadow: core.serialization.boolean().optional(),
});

export declare namespace HitRulesDetails {
    export interface Raw {
        ruleId?: string | null;
        ruleInstanceId: string;
        ruleName: string;
        ruleDescription: string;
        executedAt?: number | null;
        ruleAction: RuleAction.Raw;
        ruleHitMeta?: RuleHitMeta.Raw | null;
        labels?: RuleLabels.Raw[] | null;
        nature?: RuleNature.Raw | null;
        isShadow?: boolean | null;
    }
}
