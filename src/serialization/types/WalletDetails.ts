/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Flagright from "../../api";
import * as core from "../../core";

export const WalletDetails: core.serialization.ObjectSchema<serializers.WalletDetails.Raw, Flagright.WalletDetails> =
    core.serialization.object({
        walletType: core.serialization.string(),
        walletId: core.serialization.string().optional(),
        paymentChannel: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        tags: core.serialization.list(core.serialization.lazyObject(async () => (await import("..")).Tag)).optional(),
        walletPhoneNumber: core.serialization.string().optional(),
        walletBalance: core.serialization.lazyObject(async () => (await import("..")).Amount).optional(),
    });

export declare namespace WalletDetails {
    interface Raw {
        walletType: string;
        walletId?: string | null;
        paymentChannel?: string | null;
        name?: string | null;
        tags?: serializers.Tag.Raw[] | null;
        walletPhoneNumber?: string | null;
        walletBalance?: serializers.Amount.Raw | null;
    }
}
