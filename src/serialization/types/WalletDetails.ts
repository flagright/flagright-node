/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Flagright from "../../api/index";
import * as core from "../../core";
import { EmailId } from "./EmailId";
import { Tag } from "./Tag";
import { Amount } from "./Amount";
import { WalletNetwork } from "./WalletNetwork";
import { Address } from "./Address";
import { CountryCode } from "./CountryCode";
import { UserDetails } from "./UserDetails";

export const WalletDetails: core.serialization.ObjectSchema<serializers.WalletDetails.Raw, Flagright.WalletDetails> =
    core.serialization.object({
        walletType: core.serialization.string().optional(),
        walletId: core.serialization.string().optional(),
        paymentChannel: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        emailId: EmailId.optional(),
        tags: core.serialization.list(Tag).optional(),
        walletPhoneNumber: core.serialization.string().optional(),
        walletBalance: Amount.optional(),
        network: WalletNetwork.optional(),
        address: Address.optional(),
        countryOfNationality: CountryCode.optional(),
        authorizedRepresentative: core.serialization.list(UserDetails).optional(),
        dateOfBirth: core.serialization.string().optional(),
        transactionHash: core.serialization.string().optional(),
    });

export declare namespace WalletDetails {
    export interface Raw {
        walletType?: string | null;
        walletId?: string | null;
        paymentChannel?: string | null;
        name?: string | null;
        emailId?: EmailId.Raw | null;
        tags?: Tag.Raw[] | null;
        walletPhoneNumber?: string | null;
        walletBalance?: Amount.Raw | null;
        network?: WalletNetwork.Raw | null;
        address?: Address.Raw | null;
        countryOfNationality?: CountryCode.Raw | null;
        authorizedRepresentative?: UserDetails.Raw[] | null;
        dateOfBirth?: string | null;
        transactionHash?: string | null;
    }
}
