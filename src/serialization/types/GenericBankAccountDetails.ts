/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Flagright from "../../api/index";
import * as core from "../../core";
import { Amount } from "./Amount";
import { CountryCode } from "./CountryCode";
import { Address } from "./Address";
import { EmailId } from "./EmailId";
import { Tag } from "./Tag";

export const GenericBankAccountDetails: core.serialization.ObjectSchema<
    serializers.GenericBankAccountDetails.Raw,
    Flagright.GenericBankAccountDetails
> = core.serialization.object({
    accountNumber: core.serialization.string().optional(),
    accountType: core.serialization.string().optional(),
    accountBalance: Amount.optional(),
    bankName: core.serialization.string().optional(),
    bankCode: core.serialization.string().optional(),
    country: CountryCode.optional(),
    name: core.serialization.string().optional(),
    bankAddress: Address.optional(),
    emailId: EmailId.optional(),
    specialInstructions: core.serialization.string().optional(),
    paymentChannel: core.serialization.string().optional(),
    tags: core.serialization.list(Tag).optional(),
    transitNumber: core.serialization.string().optional(),
});

export declare namespace GenericBankAccountDetails {
    export interface Raw {
        accountNumber?: string | null;
        accountType?: string | null;
        accountBalance?: Amount.Raw | null;
        bankName?: string | null;
        bankCode?: string | null;
        country?: CountryCode.Raw | null;
        name?: string | null;
        bankAddress?: Address.Raw | null;
        emailId?: EmailId.Raw | null;
        specialInstructions?: string | null;
        paymentChannel?: string | null;
        tags?: Tag.Raw[] | null;
        transitNumber?: string | null;
    }
}
