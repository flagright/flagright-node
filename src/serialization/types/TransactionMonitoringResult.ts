/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Flagright from "../../api";
import * as core from "../../core";

export const TransactionMonitoringResult: core.serialization.ObjectSchema<
    serializers.TransactionMonitoringResult.Raw,
    Flagright.TransactionMonitoringResult
> = core.serialization
    .object({
        transactionId: core.serialization.string(),
        status: core.serialization.lazy(async () => (await import("..")).RuleAction),
    })
    .extend(core.serialization.lazyObject(async () => (await import("..")).RulesResults));

export declare namespace TransactionMonitoringResult {
    interface Raw extends serializers.RulesResults.Raw {
        transactionId: string;
        status: serializers.RuleAction.Raw;
    }
}
