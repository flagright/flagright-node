/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Flagright from "../../api";
import * as core from "../../core";

export const ExpectedIncome: core.serialization.ObjectSchema<serializers.ExpectedIncome.Raw, Flagright.ExpectedIncome> =
    core.serialization.object({
        dailyExpectedIncome: core.serialization.lazyObject(async () => (await import("..")).Amount).optional(),
        weeklyExpectedIncome: core.serialization.lazyObject(async () => (await import("..")).Amount).optional(),
        monthlyExpectedIncome: core.serialization.lazyObject(async () => (await import("..")).Amount).optional(),
        quarterlyExpectedIncome: core.serialization.lazyObject(async () => (await import("..")).Amount).optional(),
        yearlyExpectedIncome: core.serialization.lazyObject(async () => (await import("..")).Amount).optional(),
    });

export declare namespace ExpectedIncome {
    interface Raw {
        dailyExpectedIncome?: serializers.Amount.Raw | null;
        weeklyExpectedIncome?: serializers.Amount.Raw | null;
        monthlyExpectedIncome?: serializers.Amount.Raw | null;
        quarterlyExpectedIncome?: serializers.Amount.Raw | null;
        yearlyExpectedIncome?: serializers.Amount.Raw | null;
    }
}
