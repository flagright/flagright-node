/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Flagright from "../../api";
import * as core from "../../core";

export const LegalDocument: core.serialization.ObjectSchema<serializers.LegalDocument.Raw, Flagright.LegalDocument> =
    core.serialization.object({
        documentType: core.serialization.string(),
        documentNumber: core.serialization.string(),
        documentIssuedDate: core.serialization.number().optional(),
        documentExpirationDate: core.serialization.number().optional(),
        documentIssuedCountry: core.serialization.lazy(async () => (await import("..")).CountryCode),
        tags: core.serialization.list(core.serialization.lazyObject(async () => (await import("..")).Tag)).optional(),
        nameOnDocument: core.serialization.lazyObject(async () => (await import("..")).ConsumerName).optional(),
    });

export declare namespace LegalDocument {
    interface Raw {
        documentType: string;
        documentNumber: string;
        documentIssuedDate?: number | null;
        documentExpirationDate?: number | null;
        documentIssuedCountry: serializers.CountryCode.Raw;
        tags?: serializers.Tag.Raw[] | null;
        nameOnDocument?: serializers.ConsumerName.Raw | null;
    }
}
