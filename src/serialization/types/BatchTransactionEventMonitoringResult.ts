/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Flagright from "../../api/index";
import * as core from "../../core";
import { TransactionState } from "./TransactionState";
import { TransactionUpdatable } from "./TransactionUpdatable";
import { DeviceData } from "./DeviceData";
import { HitRulesDetails } from "./HitRulesDetails";
import { RuleAction } from "./RuleAction";
import { TransactionRiskScoringResult } from "./TransactionRiskScoringResult";

export const BatchTransactionEventMonitoringResult: core.serialization.ObjectSchema<
    serializers.BatchTransactionEventMonitoringResult.Raw,
    Flagright.BatchTransactionEventMonitoringResult
> = core.serialization.object({
    transactionState: TransactionState,
    timestamp: core.serialization.number(),
    transactionId: core.serialization.string(),
    eventId: core.serialization.string().optional(),
    reason: core.serialization.string().optional(),
    eventDescription: core.serialization.string().optional(),
    updatedTransactionAttributes: TransactionUpdatable.optional(),
    metaData: DeviceData.optional(),
    hitRules: core.serialization.list(HitRulesDetails).optional(),
    status: RuleAction.optional(),
    riskScoreDetails: TransactionRiskScoringResult.optional(),
});

export declare namespace BatchTransactionEventMonitoringResult {
    export interface Raw {
        transactionState: TransactionState.Raw;
        timestamp: number;
        transactionId: string;
        eventId?: string | null;
        reason?: string | null;
        eventDescription?: string | null;
        updatedTransactionAttributes?: TransactionUpdatable.Raw | null;
        metaData?: DeviceData.Raw | null;
        hitRules?: HitRulesDetails.Raw[] | null;
        status?: RuleAction.Raw | null;
        riskScoreDetails?: TransactionRiskScoringResult.Raw | null;
    }
}
