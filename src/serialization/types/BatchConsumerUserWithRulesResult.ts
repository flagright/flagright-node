/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Flagright from "../../api/index";
import * as core from "../../core";
import { UserDetails } from "./UserDetails";
import { UserStateDetails } from "./UserStateDetails";
import { KycStatusDetails } from "./KycStatusDetails";
import { EmploymentStatus } from "./EmploymentStatus";
import { LegalDocument } from "./LegalDocument";
import { ContactDetails } from "./ContactDetails";
import { EmploymentDetails } from "./EmploymentDetails";
import { TransactionLimits } from "./TransactionLimits";
import { ExpectedIncome } from "./ExpectedIncome";
import { RiskLevel } from "./RiskLevel";
import { AcquisitionChannel } from "./AcquisitionChannel";
import { SourceOfFunds } from "./SourceOfFunds";
import { ConsumerUserSegment } from "./ConsumerUserSegment";
import { PepStatus } from "./PepStatus";
import { SanctionsStatus } from "./SanctionsStatus";
import { AdverseMediaStatus } from "./AdverseMediaStatus";
import { UserEntityLink } from "./UserEntityLink";
import { BatchConsumerUserWithRulesResultSavedPaymentDetailsItem } from "./BatchConsumerUserWithRulesResultSavedPaymentDetailsItem";
import { UserTag } from "./UserTag";
import { PersonAttachment } from "./PersonAttachment";
import { ExecutedRulesResult } from "./ExecutedRulesResult";
import { UserRiskScoreDetails } from "./UserRiskScoreDetails";

export const BatchConsumerUserWithRulesResult: core.serialization.ObjectSchema<
    serializers.BatchConsumerUserWithRulesResult.Raw,
    Flagright.BatchConsumerUserWithRulesResult
> = core.serialization.object({
    userId: core.serialization.string(),
    createdTimestamp: core.serialization.number(),
    activatedTimestamp: core.serialization.number().optional(),
    userDetails: UserDetails.optional(),
    userStateDetails: UserStateDetails.optional(),
    kycStatusDetails: KycStatusDetails.optional(),
    eoddDate: core.serialization.number().optional(),
    employmentStatus: EmploymentStatus.optional(),
    occupation: core.serialization.string().optional(),
    legalDocuments: core.serialization.list(LegalDocument).optional(),
    contactDetails: ContactDetails.optional(),
    employmentDetails: EmploymentDetails.optional(),
    transactionLimits: TransactionLimits.optional(),
    expectedIncome: ExpectedIncome.optional(),
    riskLevel: RiskLevel.optional(),
    kycRiskLevel: RiskLevel.optional(),
    acquisitionChannel: AcquisitionChannel.optional(),
    reasonForAccountOpening: core.serialization.list(core.serialization.string()).optional(),
    sourceOfFunds: core.serialization.list(SourceOfFunds).optional(),
    userSegment: ConsumerUserSegment.optional(),
    pepStatus: core.serialization.list(PepStatus).optional(),
    sanctionsStatus: SanctionsStatus.optional(),
    adverseMediaStatus: AdverseMediaStatus.optional(),
    lastTransactionTimestamp: core.serialization.number().optional(),
    linkedEntities: UserEntityLink.optional(),
    savedPaymentDetails: core.serialization.list(BatchConsumerUserWithRulesResultSavedPaymentDetailsItem).optional(),
    tags: core.serialization.list(UserTag).optional(),
    attachments: core.serialization.list(PersonAttachment).optional(),
    executedRules: core.serialization.list(ExecutedRulesResult).optional(),
    riskScoreDetails: UserRiskScoreDetails.optional(),
});

export declare namespace BatchConsumerUserWithRulesResult {
    export interface Raw {
        userId: string;
        createdTimestamp: number;
        activatedTimestamp?: number | null;
        userDetails?: UserDetails.Raw | null;
        userStateDetails?: UserStateDetails.Raw | null;
        kycStatusDetails?: KycStatusDetails.Raw | null;
        eoddDate?: number | null;
        employmentStatus?: EmploymentStatus.Raw | null;
        occupation?: string | null;
        legalDocuments?: LegalDocument.Raw[] | null;
        contactDetails?: ContactDetails.Raw | null;
        employmentDetails?: EmploymentDetails.Raw | null;
        transactionLimits?: TransactionLimits.Raw | null;
        expectedIncome?: ExpectedIncome.Raw | null;
        riskLevel?: RiskLevel.Raw | null;
        kycRiskLevel?: RiskLevel.Raw | null;
        acquisitionChannel?: AcquisitionChannel.Raw | null;
        reasonForAccountOpening?: string[] | null;
        sourceOfFunds?: SourceOfFunds.Raw[] | null;
        userSegment?: ConsumerUserSegment.Raw | null;
        pepStatus?: PepStatus.Raw[] | null;
        sanctionsStatus?: SanctionsStatus.Raw | null;
        adverseMediaStatus?: AdverseMediaStatus.Raw | null;
        lastTransactionTimestamp?: number | null;
        linkedEntities?: UserEntityLink.Raw | null;
        savedPaymentDetails?: BatchConsumerUserWithRulesResultSavedPaymentDetailsItem.Raw[] | null;
        tags?: UserTag.Raw[] | null;
        attachments?: PersonAttachment.Raw[] | null;
        executedRules?: ExecutedRulesResult.Raw[] | null;
        riskScoreDetails?: UserRiskScoreDetails.Raw | null;
    }
}
