/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Flagright from "../../api";
import * as core from "../../core";

export const IbanDetails: core.serialization.ObjectSchema<serializers.IbanDetails.Raw, Flagright.IbanDetails> =
    core.serialization.object({
        method: core.serialization.lazy(async () => (await import("..")).IbanPaymentMethod),
        bic: core.serialization.property("BIC", core.serialization.string().optional()),
        bankName: core.serialization.string().optional(),
        bankAddress: core.serialization.lazyObject(async () => (await import("..")).Address).optional(),
        country: core.serialization.lazy(async () => (await import("..")).CountryCode).optional(),
        iban: core.serialization.property("IBAN", core.serialization.string().optional()),
        name: core.serialization.string().optional(),
        tags: core.serialization.lazyObject(async () => (await import("..")).Tag).optional(),
        bankBranchCode: core.serialization.string().optional(),
        paymentChannel: core.serialization.string().optional(),
    });

export declare namespace IbanDetails {
    interface Raw {
        method: serializers.IbanPaymentMethod.Raw;
        BIC?: string | null;
        bankName?: string | null;
        bankAddress?: serializers.Address.Raw | null;
        country?: serializers.CountryCode.Raw | null;
        IBAN?: string | null;
        name?: string | null;
        tags?: serializers.Tag.Raw | null;
        bankBranchCode?: string | null;
        paymentChannel?: string | null;
    }
}
