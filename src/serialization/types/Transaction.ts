/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Flagright from "../../api/index";
import * as core from "../../core";
import { TransactionType } from "./TransactionType";
import { TransactionState } from "./TransactionState";
import { TransactionAmountDetails } from "./TransactionAmountDetails";
import { TransactionOriginPaymentDetails } from "./TransactionOriginPaymentDetails";
import { TransactionDestinationPaymentDetails } from "./TransactionDestinationPaymentDetails";
import { OriginFundsInfo } from "./OriginFundsInfo";
import { DeviceData } from "./DeviceData";
import { Tag } from "./Tag";

export const Transaction: core.serialization.ObjectSchema<serializers.Transaction.Raw, Flagright.Transaction> =
    core.serialization.object({
        type: TransactionType,
        transactionId: core.serialization.string(),
        timestamp: core.serialization.number(),
        originUserId: core.serialization.string().optional(),
        destinationUserId: core.serialization.string().optional(),
        transactionState: TransactionState.optional(),
        originAmountDetails: TransactionAmountDetails.optional(),
        destinationAmountDetails: TransactionAmountDetails.optional(),
        originPaymentDetails: TransactionOriginPaymentDetails.optional(),
        destinationPaymentDetails: TransactionDestinationPaymentDetails.optional(),
        originFundsInfo: OriginFundsInfo.optional(),
        relatedTransactionIds: core.serialization.list(core.serialization.string()).optional(),
        productType: core.serialization.string().optional(),
        promotionCodeUsed: core.serialization.boolean().optional(),
        reference: core.serialization.string().optional(),
        originDeviceData: DeviceData.optional(),
        destinationDeviceData: DeviceData.optional(),
        tags: core.serialization.list(Tag).optional(),
    });

export declare namespace Transaction {
    export interface Raw {
        type: TransactionType.Raw;
        transactionId: string;
        timestamp: number;
        originUserId?: string | null;
        destinationUserId?: string | null;
        transactionState?: TransactionState.Raw | null;
        originAmountDetails?: TransactionAmountDetails.Raw | null;
        destinationAmountDetails?: TransactionAmountDetails.Raw | null;
        originPaymentDetails?: TransactionOriginPaymentDetails.Raw | null;
        destinationPaymentDetails?: TransactionDestinationPaymentDetails.Raw | null;
        originFundsInfo?: OriginFundsInfo.Raw | null;
        relatedTransactionIds?: string[] | null;
        productType?: string | null;
        promotionCodeUsed?: boolean | null;
        reference?: string | null;
        originDeviceData?: DeviceData.Raw | null;
        destinationDeviceData?: DeviceData.Raw | null;
        tags?: Tag.Raw[] | null;
    }
}
