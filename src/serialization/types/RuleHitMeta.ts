/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Flagright from "../../api/index";
import * as core from "../../core";
import { RuleHitDirection } from "./RuleHitDirection";
import { FalsePositiveDetails } from "./FalsePositiveDetails";
import { SanctionsDetails } from "./SanctionsDetails";

export const RuleHitMeta: core.serialization.ObjectSchema<serializers.RuleHitMeta.Raw, Flagright.RuleHitMeta> =
    core.serialization.object({
        hitDirections: core.serialization.list(RuleHitDirection).optional(),
        falsePositiveDetails: FalsePositiveDetails.optional(),
        sanctionsDetails: core.serialization.list(SanctionsDetails).optional(),
        isOngoingScreeningHit: core.serialization.boolean().optional(),
    });

export declare namespace RuleHitMeta {
    export interface Raw {
        hitDirections?: RuleHitDirection.Raw[] | null;
        falsePositiveDetails?: FalsePositiveDetails.Raw | null;
        sanctionsDetails?: SanctionsDetails.Raw[] | null;
        isOngoingScreeningHit?: boolean | null;
    }
}
