/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Flagright from "../../api";
import * as core from "../../core";

export const TransactionBase: core.serialization.ObjectSchema<
    serializers.TransactionBase.Raw,
    Flagright.TransactionBase
> = core.serialization.object({
    type_: core.serialization.property(
        "type",
        core.serialization.lazy(async () => (await import("..")).TransactionType).optional()
    ),
    transactionId: core.serialization.string(),
    timestamp: core.serialization.number(),
    originUserId: core.serialization.string().optional(),
    destinationUserId: core.serialization.string().optional(),
});

export declare namespace TransactionBase {
    interface Raw {
        type?: serializers.TransactionType.Raw | null;
        transactionId: string;
        timestamp: number;
        originUserId?: string | null;
        destinationUserId?: string | null;
    }
}
