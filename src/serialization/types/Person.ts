/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Flagright from "../../api/index";
import * as core from "../../core";
import { UserDetails } from "./UserDetails";
import { LegalDocument } from "./LegalDocument";
import { ContactDetails } from "./ContactDetails";
import { PepStatus } from "./PepStatus";
import { Tag } from "./Tag";
import { PersonAttachment } from "./PersonAttachment";

export const Person: core.serialization.ObjectSchema<serializers.Person.Raw, Flagright.Person> =
    core.serialization.object({
        userId: core.serialization.string().optional(),
        generalDetails: UserDetails,
        legalDocuments: core.serialization.list(LegalDocument).optional(),
        contactDetails: ContactDetails.optional(),
        pepStatus: core.serialization.list(PepStatus).optional(),
        tags: core.serialization.list(Tag).optional(),
        attachments: core.serialization.list(PersonAttachment).optional(),
    });

export declare namespace Person {
    export interface Raw {
        userId?: string | null;
        generalDetails: UserDetails.Raw;
        legalDocuments?: LegalDocument.Raw[] | null;
        contactDetails?: ContactDetails.Raw | null;
        pepStatus?: PepStatus.Raw[] | null;
        tags?: Tag.Raw[] | null;
        attachments?: PersonAttachment.Raw[] | null;
    }
}
