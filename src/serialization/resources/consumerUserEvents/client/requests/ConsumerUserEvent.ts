/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Flagright from "../../../../../api";
import * as core from "../../../../../core";

export const ConsumerUserEvent: core.serialization.Schema<
    serializers.ConsumerUserEvent.Raw,
    Omit<Flagright.ConsumerUserEvent, "allowUserTypeConversion">
> = core.serialization.object({
    timestamp: core.serialization.number(),
    userId: core.serialization.string(),
    eventId: core.serialization.string().optional(),
    reason: core.serialization.string().optional(),
    eventDescription: core.serialization.string().optional(),
    updatedConsumerUserAttributes: core.serialization
        .lazyObject(async () => (await import("../../../..")).UserOptional)
        .optional(),
});

export declare namespace ConsumerUserEvent {
    interface Raw {
        timestamp: number;
        userId: string;
        eventId?: string | null;
        reason?: string | null;
        eventDescription?: string | null;
        updatedConsumerUserAttributes?: serializers.UserOptional.Raw | null;
    }
}
